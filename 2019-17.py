#!/usr/bin/env python

from collections import *
from itertools import *
import re
import math
import operator as op

from util import *
from util.intcode import *

YEAR = 2019
DAY = 17

iobj = Input.for_date(DAY, year=YEAR, test=False)
iobj.peak()
iobj.pp_analyze()
rows = list(iobj.rows)


def part1(rows, iobj):
  ll = iobj.ints()

  pp = Intcode(ll)
  pp.run()
  #for x in pp.output:
  #  print(chr(x),end='')
  #print(pp.output)

  raw = """......................#######......................
......................#.....#......................
..................#######...#......................
..................#...#.#...#......................
#########.........#...#.#...#......................
#.......#.........#...#.#...#......................
#.......#.#############.#...#......................
#.......#.#.......#.....#...#......................
#.......#.#.......#...#######......................
#.......#.#.......#.....#..........................
#######.#########.#########........................
......#...#.....#.......#.#........................
......#...#.....#.......#.#........................
......#...#.....#.......#.#........................
......#...#.#############.#.........#######........
......#...#.#...#.........#.........#.....#........
......#...#.#...#.........#########.#.....#........
......#...#.#...#.................#.#.....#........
......#...#######.................#.#.....#........
......#.....#.....................#.#.....#........
......#.....#.....................#.#.....#........
......#.....#.....................#.#.....#........
......#######...........^############.#########....
..................................#...#...#...#....
..................................#...#...#...#....
..................................#...#...#...#....
..................................#...#...#########
..................................#...#.......#...#
..................................#############...#
......................................#...........#
................................#######...........#
................................#.................#
................................#.....#############
................................#.....#............
................................#.....#............
................................#.....#............
................................#.....#............
................................#.....#............
................................#######............
"""

  G1 = rows_to_grid(raw.split('\n'))
  G = defaultdict(lambda :'')

  for k in G1:
    G[k] = G1[k]

  print_grid(G)

  ins = []
  c = 0
  for k,v in G1.items():
    if v != '#':
      continue
    if all(G[adj] == '#' for adj in rect_adj(k)):
      ins += [k]
      c+=1

  print(ins)


  return sum([pt[0] * pt[1] for pt in ins])

def pout(pp):
  for x in pp.output:
    print(chr(x),end='')

def part2(rows, iobj):
  ll = iobj.ints()

  ll[0] = 2

  pp = Intcode(ll)

  pp.run()
  pout(pp)

  pp.input += [ord(c) for c in 'A,A,B,C,A,C,A,B,C,B'] + [10]
  pp.run()
  pout(pp)

  pp.input += [ord(c) for c in 'R,12,L,8,R,6'] + [10]
  pp.run()
  pout(pp)
  pp.input += [ord(c) for c in 'R,12,L,6,R,6,R,8,R,6'] + [10]
  pp.run()
  pout(pp)
  pp.input += [ord(c) for c in 'L,8,R,8,R,6,R,12'] + [10]
  pp.run()
  pout(pp)

  pp.input += [ord('n'), 10]
  pp.run()
  pout(pp)

  return pp.output[-10:]
  pp.run()
  for x in pp.output:
    print(chr(x),end='')
  #print(pp.output)


  return


#print('P1', part1(rows, iobj))
print('P2', part2(rows, iobj))
